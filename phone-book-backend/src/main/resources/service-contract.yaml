openapi: 3.0.3
info:
  title: Phone Book
  description: API definition of the phone book application
  version: 1.0.0
  license:
    name: Creative Commons Attribution-NonCommercial 4.0 International License
    url: https://creativecommons.org/licenses/by-nc/4.0/legalcode
  contact:
    name: Cosimo Damiano Prete
    email: cosimo.prete.damiano@gmail.com
servers:
  - url: 'http://localhost:8080/phone-book/v1'
paths:
  /contacts:
    get:
      summary: Gets the contacts the logged-in user has access to.
      description: |-
        Gets the contacts the logged-in user has access to.
        
        The logged-in user is extracted from the `Authorization` header that must be present in the request.
      tags:
        - contacts
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Query'
      responses:
        200:
          description: List of the fetched contacts.
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
            Link:
              $ref: '#/components/headers/Link'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactRead'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
    post:
      summary: Creates a new contact in the phone book of the logged-in user.
      description: |-
        Creates a new contact in the phone book of the logged-in user.
        
        The logged-in user is extracted from the `Authorization` header that must be present in the request.
      tags:
        - contacts
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  $ref: '#/components/schemas/Image'
                data:
                  $ref: '#/components/schemas/ContactCreate'
            encoding:
              image:
                contentType: image/*
      responses:
        201:
          description: Contact added successfully.
          headers:
            Location:
              $ref: '#/components/headers/Location'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /contacts/{id}:
    get:
      summary: Gets a single contact for the logged-in user.
      description: |-
        Gets a single contact for the logged-in user.
        
        The logged-in user is extracted from the `Authorization` header that must be present in the request.
      tags:
        - contacts
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        200:
          description: Contact fetched successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleContactRead'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    put:
      summary: Updates a logged-in user's contact with the new provided informtion.
      description:
        Updates a logged-in user's contact with the new provided informtion.
        
        The logged-in user is extracted from the `Authorization` header that must be present in the request.
      tags:
        - contacts
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  $ref: '#/components/schemas/Image'
                data:
                  $ref: '#/components/schemas/ContactUpdate'
            encoding:
              image:
                contentType: image/*
      responses:
        204:
          description: Contact updates successfully.
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    delete:
      summary: Deletes the logged-in user's specified contact.
      description: |-
        Deletes the logged-in user's specified contact.
        
        The logged-in user is extracted from the `Authorization` header that must be present in the request.
      tags:
        - contacts
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        200:
          description: Contact deleted successfully.
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  /settings:
    get:
      summary: Gets the settings exposed by the application.
      tags:
        - settings
      responses:
        200:
          description: Settings fetched correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsRead'
        400:
          $ref: '#/components/responses/400'

components:
  headers:
    X-Total-Count:
      description: Total number of items present in the system for the specified request.
      required: true
      schema:
        type: integer
        format: int64
    Link:
      description: |
        Header whose values point to the first, last, previous and/or - depending on the availability of the data - page 
        of available data. 
        See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link for futher details on its format.
      required: true
      schema:
        $ref: '#/components/schemas/NotBlankString'
    Location:
      description: Path to the resource to contact to get the newly created item.
      required: true
      schema:
        $ref: '#/components/schemas/NotBlankString'

  parameters:
    Id:
      description: ID of a resource.
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/NotBlankString'

    Page:
      description: The page to fetch in a `GET` operation.
      in: query
      name: page
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
    PageSize:
      description: The size of the page to fetch in a `GET` operation.
      in: query
      name: size
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 500
        default: 20
    Query:
      description: Generic query string to filter the data.
      in: query
      name: q
      schema:
        type: string

  schemas:
    Id:
      type: string
      minLength: 1
      pattern: '^\S+$'
      description: Identifier of a resource in the application.

    NotBlankString:
      type: string
      minLength: 1
      pattern: '^\S+$'

    Image:
      type: string
      format: byte
      description: Image data.

    EmailAddress:
      type: object
      required:
        - emailAddress
        - type
      properties:
        emailAddress:
          type: string
          format: email
        type:
          type: string
          enum:
            - HOME
            - OFFICE
            - OTHER

    PhoneNumber:
      type: object
      required:
        - phoneNumber
        - type
      properties:
        phoneNumber:
          $ref: '#/components/schemas/NotBlankString'
        type:
          type: string
          enum:
            - MOBILE
            - HOME
            - OFFICE
            - OTHER

    BasicContactDetails:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string

    ContactDetailsWithoutImage:
      type: object
      allOf:
        - $ref: '#/components/schemas/BasicContactDetails'
      properties:
        emailAddresses:
          type: array
          default: []
          items:
            $ref: '#/components/schemas/EmailAddress'
        phoneNumbers:
          type: array
          default: []
          items:
            $ref: '#/components/schemas/PhoneNumber'

    ContactRead:
      type: object
      description: Object providing all the information about a contact in the system without e-mail addresses and phone numbers.
      allOf:
        - $ref: '#/components/schemas/BasicContactDetails'
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/Id'
        image:
          $ref: '#/components/schemas/Image'

    SingleContactRead:
      type: object
      description: Object providing all the information about a single contact in the system, including e-mail addresses and phone numbers.
      allOf:
        - $ref: '#/components/schemas/ContactDetailsWithoutImage'
        - $ref: '#/components/schemas/ContactRead'
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/Id'
        image:
          $ref: '#/components/schemas/Image'

    ContactCreate:
      type: object
      description: Object providing the necessary information for creating a contact in the system, without the image.
      allOf:
        - $ref: '#/components/schemas/ContactDetailsWithoutImage'

    ContactUpdate:
      type: object
      description: Object providing the necessary information for updating a contact in the system, without the image.
      allOf:
        - $ref: '#/components/schemas/ContactDetailsWithoutImage'

    SettingsRead:
      type: object
      description: Settings exposed by the application to the clients.
      required:
        - maxImageSizeBytes
      properties:
        maxImageSizeBytes:
          description: Max size of an uploadable image in bytes.
          type: integer
          format: int64
          readOnly: true

  responses:
    400:
      description: |-
        An error occurred while executing the operation. 
        Check the response for further details.
    401:
      description: The user is not authenticated and therefore he/she cannot access the resource.
    403:
      description: The user is authenticated, but he/she doesn't have enough rights to access the resource.
    404:
      description: The requested resource was not found.