<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.cdprete</groupId>
    <artifactId>phone-book</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>Phone Book</name>
    <description>A phone book application written in Spring Boot and Flutter</description>
    <packaging>pom</packaging>

    <developers>
        <developer>
            <name>Cosimo Damiano Prete</name>
            <email>cosimo.prete.damiano@gmail.com</email>
            <roles>
                <role>Owner</role>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Creative Commons Attribution-NonCommercial 4.0 International License</name>
            <url>https://creativecommons.org/licenses/by-nc/4.0/legalcode</url>
        </license>
    </licenses>

    <inceptionYear>2022</inceptionYear>

    <modules>
        <module>phone-book-backend</module>
        <module>phone-book-deployment</module>
        <module>phone-book-auth-proxy</module>
    </modules>

    <properties>
        <docker.image-name>${project.artifactId}</docker.image-name>
        <docker.repository-name>docker.io/cdprete</docker.repository-name>
        <docker.qualified-image-name>${docker.repository-name}/${docker.image-name}</docker.qualified-image-name>

        <dockerfile-maven-plugin.version>1.4.9</dockerfile-maven-plugin.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>17</java.version>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <maven.compiler.parameters>true</maven.compiler.parameters>

        <maven-deploy-plugin.version>3.0.0-M2</maven-deploy-plugin.version>
        <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>

        <spring-boot.version>2.6.3</spring-boot.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                    <configuration>
                        <repository>${docker.qualified-image-name}</repository>
                        <buildArgs>
                            <JAR_NAME>${project.build.finalName}</JAR_NAME>
                            <JAVA_VERSION>${java.version}</JAVA_VERSION>
                        </buildArgs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build-${docker.image-name}-docker-image</id>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <configuration>
                                <squash>true</squash>
                            </configuration>
                        </execution>
                        <execution>
                            <id>tag-${docker.image-name}-docker-image</id>
                            <goals>
                                <goal>tag</goal>
                            </goals>
                            <configuration>
                                <tag>${project.version}</tag>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <excludes>
                            <!-- Avoid packaging development configurations in the final JAR. -->
                            <exclude>application-dev.yml</exclude>
                            <exclude>application-dev.yaml</exclude>
                            <exclude>application-dev.properties</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <executions>
                        <execution>
                            <!-- Skip the default deploy of the JARs since we don't have a Maven registry where to publish them -->
                            <id>default-deploy</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
